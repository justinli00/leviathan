#updates git repo's versions of svn repo files
name: Pull SVN

on:
  repository_dispatch:
    types: pull-svn
  workflow_call:
permissions:
  contents: write

jobs:
  pull-svn-files:
    env:
      SVN_USERNAME: ${{ secrets.svn_username }}
      SVN_PASSWORD: ${{ secrets.svn_password }}
      SVN_URL: ${{ secrets.svn_url }}
      UPDATED: false
    runs-on: windows-2019
    steps:
    - name: checkout-git
      uses: actions/checkout@v3

    #check out or update svn
    - name: check-if-checkout-needed
      run: |
        If ( !(Test-Path -Path svn-repo ) )
        { 
          #New-Item -Path .\svn-repo -Item-Type Directory
          #$relativePath = "svn-repo" | Resolve-Path -Relative
          Write-Host ">> svn-repo was not found. Checking out new copy."
          svn checkout --username $SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_URL $relativePath
          "UPDATED=true"  | Out-File -FilePath $env:GITHUB_ENV -Append
        } 
        Else {
          Write-Host ">> svn-repo was found. Finding head, working revisions."
          cd svn-repo
          "SVN_WORKING_REVISION=$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD --show-item revision)"  | Out-File -FilePath $env:GITHUB_ENV -Append
          "SVN_HEAD_REVISION=$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD --revision HEAD --show-item revision)"  | Out-File -FilePath $env:GITHUB_ENV -Append
          cd ..
        }
      shell: pwsh
    
    - name: update-if-needed
      if: ${{ env.UPDATED == 'false' }} 
      run: |
        cd svn-repo
        Write-Host ">> Working revision is ${{ env.SVN_WORKING_REVISION }}."
        Write-Host ">> Head revision is ${{ env.SVN_HEAD_REVISION}}."
        If ( ${{ env.SVN_WORKING_REVISION }} -eq ${{ env.SVN_HEAD_REVISION }} )
        {
          Write-Host ">> Update is not necessary."
          "UPDATED=false" | Out-File -FilePath $env:GITHUB_ENV -Append
          exit
        }
        Else
        {
          Write-Host ">> Update is necessary."
          svn update --username $env:SVN_USERNAME --password $env:SVN_PASSWORD Get-Location
          Write-Host ">> Update successful. Resolving any conflicts."
          svn resolve --accept theirs-full --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          "UPDATED=true" | Out-File -FilePath $env:GITHUB_ENV -Append
          cd ..
        }
        Write-Host ">> git repo's copy of svn files is now up-to-date."
      shell: pwsh
      
    #push changes to github
    - name: push-changes
      if: ${{ env.UPDATED == 'true' }}
      run: |
        git config user.name '$(git log -n 1 --pretty=format:%an)'
        git config user.email '$(git log -n 1 --pretty=format:%ae)'
        git add .
        git commit -m 'Updating svn to r.${{ env.SVN_HEAD_REVISION }}'
        git push
      shell: pwsh