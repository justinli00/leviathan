#updates git repo's versions of svn repo files
name: Pull SVN

on:
  repository_dispatch:
    types: pull-svn
  workflow_call:
permissions:
  contents: write

jobs:
  pull-svn-files:
    env:
      SVN_USERNAME: ${{ secrets.svn_username }}
      SVN_PASSWORD: ${{ secrets.svn_password }}
      SVN_URL: ${{ secrets.svn_url }}
      CHECK_UPDATE: true
      UPDATED: true
    runs-on: windows-2019
    steps:
    - name: checkout-git
      uses: actions/checkout@v3

    #check out or update svn
    - name: check-if-checkout-needed
      run: |
        If ( !(Test-Path -Path svn-repo ) )
        {
          Write-Host ">> svn-repo not found. Checking out new copy."
          svn checkout --username $SVN_USERNAME --password $SVN_PASSWORD $SVN_URL svn-repo
          "CHECK_UPDATE=false"  | Out-File -FilePath $env:GITHUB_ENV
          "UPDATED=true"  | Out-File -FilePath $env:GITHUB_ENV
        } 
        Else {
          cd svn-repo
          "SVN_WORKING_REVISION=$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD --show-item revision)"  | Out-File -FilePath $env:GITHUB_ENV
          "SVN_HEAD_REVISION=$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD --revision HEAD --show-item revision)"  | Out-File -FilePath $env:GITHUB_ENV
          cd ..
        fi
      shell: pwsh
    
    - name: update-if-needed
      if: ${{ env.CHECK_UPDATE == 'true' }} 
      run: |
        cd svn-repo
        echo "Working revision is ${{ env.SVN_WORKING_REVISION }}"
        echo "Head revision is ${{ env.SVN_HEAD_REVISION}}"
        if [ ${{ env.SVN_WORKING_REVISION }} == ${{ env.SVN_HEAD_REVISION }} ];
        then
          echo ">> Update is not necessary."
          echo "UPDATED=false" >> $env:GITHUB_ENV
          exit
        else
          echo ">> Update is necessary."
          
          #make tmp folder
          cd .svn
          if [ ! -d svn-repo ];
          then 
            mkdir tmp
          fi 
          cd ..

          svn update --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          echo ">> Update successful. Resolving any conflicts."
          svn resolve --accept theirs-full --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          echo "UPDATED=true" >> $env:GITHUB_ENV
          cd ..
        fi
        echo ">> git repo's copy of svn files is now up-to-date."
      shell: bash
      
    #push changes to github
    - name: push-changes
      if: ${{ env.UPDATED == 'true' }}
      run: echo >> "committing :D"
      #run: |
      #  git config user.name '$(git log -n 1 --pretty=format:%an)'
      #  git config user.email '$(git log -n 1 --pretty=format:%ae)'
      #  git add .
      #  git commit -m 'Updating svn to r.$env:SVN_HEAD_REVISION'
      #  git push
      shell: bash