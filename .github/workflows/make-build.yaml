#makes a release with unity
name: make-build

on:
  schedule:
    - cron: '59 6 * * 2' #runs at 11:59 on Monday (PDT -> UTC)
  repository_dispatch:
    types: build
permissions:
  contents: write

jobs:
  pull-svn:
    uses: ./.github/workflows/pull-svn.yaml
    secrets: inherit
    permissions: 
      contents: write
  build:
    needs: pull-svn
    runs-on: self-hosted
    env:
      SVN_USERNAME: ${{ secrets.svn_username }}
      SVN_PASSWORD: ${{ secrets.svn_password }}

    steps:
    #DO NOT CHECKOUT GIT
    - name: setup-build
      run: |
        #clean up the directory in case a previous run failed
        if ( Test-Path -Path svn-builds )
        {
          Remove-Item -Path ".\svn-builds" -Recurse -Force
        }

        #make sure installer files are up-to-date
        if ( !(Test-Path -Path svn-installer ))
        {
          New-Item -Path ".\svn-installer" -ItemType "Directory"    
          svn checkout --username $env:SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_INSTALLER svn-installer
        }
        else
        {
          cd svn-installer
          svn update --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          svn resolve --accept theirs-full --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          cd ..
        }

        cd svn-repo
        "BUILD_NAME=BATIOSr$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD --revision HEAD --show-item revision)" | Out-File -FilePath $env:GITHUB_ENV -Append
        cd ..
      env:
        SVN_INSTALLER: ${{ secrets.svn_installer }}

    #build the project from the command line; unity is installed on self-hosted runner
    - name: make-build
      env:
        UNITY_PATH: ${{ secrets.unity_path }}
      run: |
        Write-Host ">> Building project."
        Start-Process $env:UNITY_PATH -ArgumentList "-batchMode","-quit","-executeMethod","Builder.BuildProject","-projectPath","svn-repo","-outputPath","tempBuild","-buildTarget","StandaloneWindows64" -Wait
        Write-Host ">> Build complete."

    - name: make-installer
      run: |
        Move-Item -Path(Get-ChildItem -Path ".\tempBuild" -Exclude "*DoNotShip",".svn") -Destination ".\svn-installer\GAMEDIRECTORY"
        Start-Process "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" -ArgumentList ".\svn-installer\InstallScript.iss" -Wait
        Remove-Item -Path ".\tempBuild" -Recurse -Force

    #upload builds to svn builds folder
    - name: upload-installer-to-svn
      env: 
        SVN_BUILD: ${{ secrets.SVN_BUILD }}
      run: |
        Write-Host ">> Uploading new build"
        Write-Host ">> Checking out svn-builds"
        New-Item -Path ".\svn-builds" -ItemType "Directory"    
        svn checkout --username $env:SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_BUILD svn-builds --depth empty

        Write-Host ">> Moving new installer to svn-builds."
        New-Item -Path ".\svn-builds\$env:BUILD_NAME" -ItemType "Directory"
        New-Item -Path ".\svn-builds\$env:BUILD_NAME\GAMEDIRECTORY" -ItemType "Directory"
        Move-Item -Path (Get-ChildItem -Path .\svn-installer\GAMEDIRECTORY -Exclude "DigiPen_EULA.rtf","icon.ico") -Destination ".\svn-builds\$env:BUILD_NAME\GameDirectory"
        Move-Item -Path ".\svn-installer\INSTALLER" -Destination ".\svn-builds\$env:BUILD_NAME\Installer"
        New-Item -Path ".\svn-installer\INSTALLER" -ItemType "Directory" 
        Write-Host ">> Committing new build to svn."
        cd svn-builds
        svn add $env:BUILD_NAME --username $env:SVN_USERNAME --password $env:SVN_PASSWORD
        svn commit --username $env:SVN_USERNAME --password $env:SVN_PASSWORD -m "Automated build"
        cd ..

        Write-Host ">> Cleaning up."
        Remove-Item -Path ".\svn-builds" -Recurse -Force
        Write-Host ">> Done!."