name: Run tests
permissions:
  contents: write
on: 
  repository_dispatch:
    types: test
  workflow_call:
    inputs:
      revision:
        required: true
        type: string
      test-revision:
        required: true
        type: string

jobs:
  pull-svn:
    uses: justinli00/leviathan/.github/workflows/pull-svn.yaml@main
    secrets: inherit
    permissions: 
      contents: write
    with:
      revision: ${{ inputs.revision }}
      test-revision: ${{ inputs.test-revision }}
  run_tests:
    needs: pull-svn
    runs-on: self-hosted
    env:
      SVN_USERNAME: ${{ secrets.svn_username }}
      SVN_PASSWORD: ${{ secrets.svn_password }}
      SVN_URL: ${{ vars.svn_url }}
    steps:
      #DO NOT CHECKOUT GIT
      - name: init-test-variables
        run: |
          #clean up the directory in case a previous run failed
          if ( Test-Path -Path svn-tests )
          {
            Remove-Item -Path ".\svn-tests" -Recurse -Force
          }

          if ( "${{ inputs.revision }}" -eq "" )
          {
            #no input specified; get the head revision
            "TARGET_REVISION=$(svn info --username $env:SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_URL --revision HEAD --show-item revision)" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
          else
          {
            #from workflow call; pass input along
            "TARGET_REVISION=${{ inputs.revision }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          }

          cd svn-repo
          "RUN_TESTS_PATH=$(Join-Path -Path (Get-Location) -ChildPath "Hooks\run_tests.exe")" | Out-File -FilePath $env:GITHUB_ENV -Append
          cd ..
        
      #run tests through testing pipeline
      - name: run-tests
        run: |
          "TEST_LOG_NAME=results_$env:TARGET_REVISION.xlsx" | Out-File -FilePath $env:GITHUB_ENV -Append
          cd svn-repo
          Start-Process "$env:RUN_TESTS_PATH" -ArgumentList "--head_rev","$env:TARGET_REVISION" -Wait
          cd ..

      #rename the test log and move it into the test log folder
      - name: commit-test-log
        run: |
          Write-Host ">> Checking out svn-tests"
          New-Item -Path ".\svn-tests" -ItemType "Directory"    
          svn checkout --username $env:SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_TEST svn-tests --quiet
          
          dir
          cd svn-repo
          dir
          cd hooks
          dir
          cd test_artifacts 
          dir
          cd ../../..
          
          Write-Host ">> Moving new test log to svn-tests."
          #Rename-Item -Path ".\svn-repo\Hooks\test_artifacts\results_$env:TARGET_REVISION.xlsx" -NewName "$env:TEST_LOG_NAME"
          Move-Item -Path ".\svn-repo\Hooks\test_artifacts\$env:TEST_LOG_NAME" -Destination ".\svn-tests" -Force 

          Write-Host ">> Committing new test log to svn."
          cd svn-tests
          svn add $env:TEST_LOG_NAME --username $env:SVN_USERNAME --password $env:SVN_PASSWORD
          svn commit --username $env:SVN_USERNAME --password $env:SVN_PASSWORD -m "Automated test results for revision $env:TARGET_REVISION"
          cd ..                  

          Write-Host ">> Cleaning up."
          Remove-Item -Path ".\svn-tests" -Recurse -Force
          Write-Host ">> Done!"
        env:
          SVN_TEST: ${{ vars.svn_test }}