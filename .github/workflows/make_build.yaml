#makes a release with unity
name: Make Build

on:
  schedule:
    - cron: '59 6 * * 2' #runs at 11:59 on Monday (PDT -> UTC)
  repository_dispatch:
    types: build
permissions:
  contents: write

jobs:
  build:
    runs-on: self-hosted
    env:
      BUILD_NAME: Basil and the Isles of Spice
      TARGET_PLATFORM: StandaloneWindows64
    steps:
    - uses: actions/checkout@v3
    
    #check out or update svn
    - name: check-if-checkout-needed
      run: |
        dir
        If ( !(Test-Path -Path svn-repo ) )
        { 
          New-Item -Path ".\svn-repo" -ItemType "Directory"    
          Write-Host ">> svn-repo was not found. Checking out new copy."
          svn checkout --username $env:SVN_USERNAME --password $env:SVN_PASSWORD $env:SVN_URL svn-repo
        } 
        Else {
          Write-Host ">> svn-repo was found. Updating to head revision, if necessary."
          cd svn-repo
          svn update --username $env:SVN_USERNAME --password $env:SVN_PASSWORD Get-Location
          Write-Host ">> Update successful. Resolving any conflicts."
          svn resolve --accept theirs-full --username $env:SVN_USERNAME --password $env:SVN_PASSWORD 
          cd ..
        }
        Write-Host ">> git repo's copy of svn files is now up-to-date."
      env:
        SVN_USERNAME: ${{ secrets.svn_username }}
        SVN_PASSWORD: ${{ secrets.svn_password }}
        SVN_URL: ${{ secrets.svn_url }}

    - name: make-build
      uses: game-ci/unity-builder@v2
      env:
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      with:
        targetPlatform: ${{ env.TARGET_PLATFORM }}
        unityVersion: 2021.3.1f1 
        projectPath: svn-repo
        allowDirtyBuild: true       

    - name: dir-check-2
      run: |
        dir 
        cd build
        dir
        cd ${{env.TARGET_PLATFORM}}
        dir
        cd ..
        cd ..

    - name: upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.BUILD_NAME }}
        path: build/${{ env.TARGET_PLATFORM }}

    #push changes to github
    #- name: push-build
    #  run: |
    #    git config user.name 'Automated Build'
    #    git config user.email ${{ secrets.UNITY_EMAIL }}
    #    git add build
    #    git commit -m 'Automated Build | ${{ env.BUILD_NAME }}'
    #    git push